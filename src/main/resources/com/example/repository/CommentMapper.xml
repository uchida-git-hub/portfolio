<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.example.repository.CommentMapper">

<resultMap type="com.example.model.CommentInfo" id="commentMap">
	<id column="comment_id" property="commentId" />
	<result column="post_id" property="postId" />
	<result column="app_user_id" property="userId" />
	<result column="app_user_name" property="appUserName" />
	<result column="message" property="message" />	
	<result column="created" property="created" />
</resultMap>

<!--//コメントを投稿-->
<insert id = "uploadComment" parameterType="com.example.model.Comment" >
	insert into comment(
		comment_id ,
		app_user_name, 
		post_id,
		app_user_id , 
		created , 
		message
	)
	values(
	#{commentId},
	#{appUserName},
	#{postId},
	#{userId},
	#{created},
	#{message}
	)
</insert>

<!--//コメントを1件削除-->
<delete id="deleteComment">
	DELETE
	FROM 
		comment
	WHERE
		comment_id=#{commentId}
</delete>

<!--//ポストIDから検索-->
<select id = "findByPostId" resultMap="commentMap">
	SELECT
		comment_info.comment_id,
		comment_info.post_id,
		comment_info.app_user_id,
		comment_info.message,
		comment_info.created,
		account_info.app_user_name
	FROM
		(SELECT 
			comment.comment_id,
			comment.post_id,
			comment.app_user_id,
			comment.message,
			comment.created
		 FROM comment
		 WHERE comment.post_id = #{postId}) as comment_info
		left join account_info
			on comment_info.app_user_id = account_info.app_user_id
	WHERE 
		comment_info.post_id = #{postId}
		and account_info.enable != 0
	ORDER BY
		comment_info.created desc
</select>

<delete id="deleteCommentByUserId">
	DELETE 
	FROM
		comment
	WHERE
		app_user_id = #{userId}
</delete>

<delete id="deleteCommentByPostId">
	delete
	from
		comment
	where
		post_id = #{postId}
</delete>

</mapper>